AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9
  Sample SAM Template for simple-dataset-generating-supporter

Globals:
  Function:
    Timeout: 30
    MemorySize: 128

Resources:
  MyBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "simple-dataset-generating-supporter-image"
      AccessControl: Private
      VersioningConfiguration:
        Status: Enabled

  MyLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: simple-dataset-generating-supporter-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: simple-dataset-generating-supporter-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource: !Sub 'arn:aws:s3:::${MyBucket}/*'

  PingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: simple-dataset-generating-supporter-ping
      PackageType: Image
      ImageConfig:
        Command: [ "app.ping" ]
      Architectures:
        - x86_64
      Events:
        MyApiGateway:
          Type: Api
          Properties:
            Path: /ping
            Method: get
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./api
      DockerTag: python3.9-v1

  ListFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: simple-dataset-generating-supporter-list
      PackageType: Image
      Role: !GetAtt MyLambdaRole.Arn
      ImageConfig:
        Command: [ "app.list" ]
      Architectures:
        - x86_64
      Events:
        MyApiGateway:
          Type: Api
          Properties:
            Path: /image
            Method: get
      Environment:
        Variables:
          MY_BUCKET_NAME: !Ref MyBucket
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./api
      DockerTag: python3.9-v1

  PostFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: simple-dataset-generating-supporter-post
      PackageType: Image
      Role: !GetAtt MyLambdaRole.Arn
      ImageConfig:
        Command: [ "app.post" ]
      Architectures:
        - x86_64
      Events:
        MyApiGateway:
          Type: Api
          Properties:
            Path: /image
            Method: post
      Environment:
        Variables:
          MY_BUCKET_NAME: !Ref MyBucket
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./api
      DockerTag: python3.9-v1

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  MyApiGateway:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
  PingFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt PingFunction.Arn
  PingFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt PingFunctionRole.Arn
